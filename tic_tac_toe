x='x'
o='0'
EMPTY=""
TIE='ничья'
NUM_SQUARES=9
def display_instruct():
    """ Выводит на экран инструкцию для игрока."""
    print(
    """
    Добро пожаловать на ринг грандиознейших интелектуальных состязаний всех времен.
    Твой мозг и мой процессор сойдутся в схватке за доской игры "Крестики-нолики".
    Чтобы сделать ход, введите число от 0 до 8.Числа однозначно соотвествуют полям доски - так, как показано ниже:
    0|1|2
    ------
    3|4|5
    ------
    6|7|8
    
    Приготовься к бою, жалкий белковый человечишка.Вот-вот начнется решающее сражение.\n""")
display_instruct()
def ask_yes_no(question):
    """Задает вопрос с ответом: да или нет"""
    response=None
    while response not in ('y','n'):
        response=input().lower()
    return response    
def ask_number(response,low,high):
    response=None
    while response not in range(low,high):
        response=int(input(question))
    return response
def pieces():
    """ Определяет принадлежность первого хода"""
    go_first=ask_yes_no("Хочешь оставить первый ход за собой? (у/n)")
    if go_first=='y':
        print('\nНу что ж, даю тебе фору:играй крестиками.')
        human=x
        computer=o
    else:
        print("\nТвоя удаль тебя погубит...Буду начинать я")
        computer=x
        human=o
    return computer,human
def new_board():
    """Создает новую игровую доску"""
    board=[]
    for square in range(NUM_SQUARES):
        board.append(EMPTY)
    return board    
def display_board(board):
    """Отображает игровую доску на экране"""
    print("\n\t",board[0],"|",board[1],'|',board[2])
    print("\t","------")
    print("\n\t",board[3],"|",board[4],'|',board[5])
    print("\t","------")
    print("\n\t",board[6],"|",board[7],'|',board[8],'\n')
def legal_moves(board):
    """Создаем список доступных ходов"""
    moves=[]
    for square in range(NUM_SQUARES):
        if board[square]==EMPTY:
            moves.append(square)
    return moves        
def winne(board):
    """Определяем победителя в игре."""
    WAYS_TO_WIN = ((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))
    for row in WAYS_TO_WIN:
        if board[row[0]]==board[row[1]]==board[row[2]]!=EMPTY:
            winner=board[row[0]]
            return winner
        if EMPTY not in board:
            return TIE
    return None        
def computer_move(board,computer,human):
    """Делает ход за компьютерного противника"""
    board=board[:]
    BEST_MOVES=(4,0,2,6,8,1,3,5,7)
    print("я выберу поле номер",end=' ')
    for move in legal_moves(board):
        board[move]=computer
        if winner(board)==computer:
            print(move)
            return move
        board[move]=EMPTY  
    for move in BEST_MOVES:
        if move in legal_moves(board):
            print(move)
            return move
def next_turn():
    """осущетсвляем переход хода"""
    if turn==x:
        return 0
    else:
        return x
def congrat_winner(the_winner,computer,human):
    """Поздравляет победителя игры."""
    if the_winner!=TIE:
        print("Три",the_winner,"в ряд!\n")
    else:
        print("Ничья!\n")
    if the_winner==computer:
        print("как я и предсказал, победа в очередной раз осталась за мной")
    elif the_winner==human:
        print('О нет,этого не может быть! неужели ты сумел перехетрить меня, белковый?')
    elif the_winner==TIE:
        print("ты сумел перевести игру в ничью, повезло тебе")
def main():
    display_instruct()
    computer,human=pieces()
    turn=x
    board=new_board()
    display_board(board)
    while not winner(board):
        if turn==human:
            move=human_move(board,human)
            board[move]=human
        else:
            move=computer_move(board,computer,human)
            board[move]=computer
        display_board(board)
        turn=next_turn(turn)
    the_winner=winner(board)
    congrat_winner(the_winner,computer,human)
main()    
